Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
                              ../../AVR-Programming-Library/USART.o (__udivmodqi4)
/usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
                              ../../AVR-Programming-Library/USART.o (__udivmodhi4)
/usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
                              serialLoopback.o (__do_copy_data)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .text          0x0000000000000000        0x0 serialLoopback.o
 .data          0x0000000000000000        0x0 serialLoopback.o
 .bss           0x0000000000000000        0x0 serialLoopback.o
 .text          0x0000000000000000        0x0 ../../AVR-Programming-Library/USART.o
 .data          0x0000000000000000        0x0 ../../AVR-Programming-Library/USART.o
 .bss           0x0000000000000000        0x0 ../../AVR-Programming-Library/USART.o
 .text.readString
                0x0000000000000000       0x58 ../../AVR-Programming-Library/USART.o
 .text.printByte
                0x0000000000000000       0x32 ../../AVR-Programming-Library/USART.o
 .text.printWord
                0x0000000000000000       0x7e ../../AVR-Programming-Library/USART.o
 .text.printBinaryByte
                0x0000000000000000       0x3a ../../AVR-Programming-Library/USART.o
 .text.nibbleToHexCharacter
                0x0000000000000000        0xc ../../AVR-Programming-Library/USART.o
 .text.printHexByte
                0x0000000000000000       0x1e ../../AVR-Programming-Library/USART.o
 .text.getNumber
                0x0000000000000000       0x46 ../../AVR-Programming-Library/USART.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.div
                0x0000000000000000       0x18 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000000       0x28 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
LOAD serialLoopback.o
LOAD ../../AVR-Programming-Library/USART.o
START GROUP
LOAD /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000       0xec
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000076        0x8 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x000000000000007e        0x4 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x000000000000007e                __vector_1
                0x000000000000007e                __vector_12
                0x000000000000007e                __bad_interrupt
                0x000000000000007e                __vector_6
                0x000000000000007e                __vector_3
                0x000000000000007e                __vector_11
                0x000000000000007e                __vector_13
                0x000000000000007e                __vector_17
                0x000000000000007e                __vector_19
                0x000000000000007e                __vector_7
                0x000000000000007e                __vector_5
                0x000000000000007e                __vector_4
                0x000000000000007e                __vector_9
                0x000000000000007e                __vector_2
                0x000000000000007e                __vector_15
                0x000000000000007e                __vector_8
                0x000000000000007e                __vector_14
                0x000000000000007e                __vector_10
                0x000000000000007e                __vector_16
                0x000000000000007e                __vector_18
                0x000000000000007e                __vector_20
                0x0000000000000082                . = ALIGN (0x2)
 *(.text.*)
 .text.startup.main
                0x0000000000000082       0x1e serialLoopback.o
                0x0000000000000082                main
 .text.initUSART
                0x00000000000000a0       0x12 ../../AVR-Programming-Library/USART.o
                0x00000000000000a0                initUSART
 .text.transmitByte
                0x00000000000000b2        0x8 ../../AVR-Programming-Library/USART.o
                0x00000000000000b2                transmitByte
 .text.receiveByte
                0x00000000000000ba        0x8 ../../AVR-Programming-Library/USART.o
                0x00000000000000ba                receiveByte
 .text.printString
                0x00000000000000c2       0x26 ../../AVR-Programming-Library/USART.o
                0x00000000000000c2                printString
                0x00000000000000e8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000000e8        0x0 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
                0x00000000000000e8                exit
                0x00000000000000e8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000000e8        0x4 /usr/lib/gcc/avr/11.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x00000000000000ec                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x00000000000000ec                _etext = .

.data           0x0000000000800060       0x10 load address 0x00000000000000ec
                0x0000000000800060                PROVIDE (__data_start = .)
 *(.data)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 .rodata.main.str1.1
                0x0000000000800060        0xf serialLoopback.o
 *(.gnu.linkonce.r*)
                0x0000000000800070                . = ALIGN (0x2)
 *fill*         0x000000000080006f        0x1 
                0x0000000000800070                _edata = .
                0x0000000000800070                PROVIDE (__data_end = .)

.bss            0x0000000000800070        0x0
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x00000000000000ec                __data_load_start = LOADADDR (.data)
                0x00000000000000fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800070        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit .noinit.* .gnu.linkonce.n.*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800070                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x318
 *(.stab)
 .stab          0x0000000000000000       0xfc serialLoopback.o
 .stab          0x00000000000000fc      0x21c ../../AVR-Programming-Library/USART.o
                                        0x63c (size before relaxing)

.stabstr        0x0000000000000000      0x2eb
 *(.stabstr)
 .stabstr       0x0000000000000000      0x2eb serialLoopback.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x12
 *(.comment)
 .comment       0x0000000000000000       0x12 serialLoopback.o
                                         0x13 (size before relaxing)
 .comment       0x0000000000000012       0x13 ../../AVR-Programming-Library/USART.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x4e6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_abbrev   0x0000000000000000      0x4a3
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x196
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/lib/gcc/avr/11.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_addr
 *(.debug_addr)

.debug_line_str
 *(.debug_line_str)

.debug_loclists
 *(.debug_loclists)

.debug_macro
 *(.debug_macro)

.debug_names
 *(.debug_names)

.debug_rnglists
 *(.debug_rnglists)

.debug_str_offsets
 *(.debug_str_offsets)

.debug_sup
 *(.debug_sup)
OUTPUT(serialLoopback.elf elf32-avr)
LOAD linker stubs
